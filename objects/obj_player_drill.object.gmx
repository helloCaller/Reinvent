<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_lever_walking</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>obj_player_parent</parentName>
  <maskName>spr_player_spring</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
//CODE UNIQUE TO WHEEL PLAYER GOES HERE
upgradeState = "drill"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();    

var breakableR = instance_place(x-5*image_xscale,y, obj_breakable_wall);
var breakableL = instance_place(x+5*image_xscale,y, obj_breakable_wall);

var throwableR = instance_place(x-5*image_xscale,y, obj_throwable);
var throwableL = instance_place(x+5*image_xscale,y, obj_throwable);

var venusR = instance_place(x-5*image_xscale,y, obj_venus);
var venusL = instance_place(x+5*image_xscale,y, obj_venus);


//Throw code
if(keyboard_check_pressed(ord("A"))){
    if(place_meeting(x+5*image_xscale,y, obj_throwable)){
        
        (throwableL).state = "playerOnLeftFlipping";
        } 
        
    if(place_meeting(x-5*image_xscale,y, obj_throwable)){
        (throwableR).state = "playerOnRightFlipping";
        }  

}


//Drill code
if(keyboard_check_pressed(ord("D"))){
 

    if(place_meeting(x+5*image_xscale,y, obj_breakable_wall)){
        (breakableL).image_speed = 1/6;
        part_particles_create(global.P_System, (breakableL).x, (breakableL).y, global.p1, 50);
        
    } else if(place_meeting(x-5*image_xscale,y, obj_breakable_wall)){
        
        (breakableR).image_speed = 1/6;
        part_particles_create(global.P_System, (breakableR).x, (breakableR).y, global.p1, 50);
    }
    
    //kill venus with drill
    if(place_meeting(x+5*image_xscale,y, obj_venus)){
        with(venusL){
            instance_destroy();
            part_particles_create(global.P_System, x, y, global.p1, 50);
        }
        
    } else if(place_meeting(x-5*image_xscale,y, obj_venus)){
        with(venusR){
            instance_destroy();
            part_particles_create(global.P_System, x, y, global.p1, 50);
            }
    }

}

///////////////
// Upgrading //
///////////////
if upgradeState = "grapple"{
    var wf = whiteFlash;
    with instance_create(x,y, obj_player_grapple){
        whiteFlash = wf;
        camera_target = obj_player_grapple;}
    instance_destroy();}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited(); //Executes parent code

 




if(keyboard_check_pressed(ord('S'))){
   instance_destroy();
   instance_create(x,y, obj_player_grapple);
   }


 ////SPRITE ANIMATION
  
   
       //Jumping
     if jumping{
        sprite_index = spr_player_lever_jump; 
        image_speed = 0.34;
        if floor(image_index) = 1{
            image_speed = 0;}}    
            
    //Falling
    else if vsp &gt; 0{
        sprite_index = spr_player_lever_jump; 
        image_speed = 0;
        image_index = 2;}
   
   //Everything else
   
   
   else{
   //movement animation 
   
   
        if(hsp==0){
    sprite_index = spr_lever_idle;
   image_speed = 0.334;
   } else {
   image_speed = 0.334;
   //so as to restart image_index from 0
        if(floor(sprite_index)!=spr_lever_walking){
            image_index = 0;
            sprite_index = spr_lever_walking
             }
        }
        
        if(throw){
            sprite_index = spr_player_lever_throw;
            image_speed = 0.1;
        } 
        
        if(drill){
           sprite_index = spr_drilling;
           image_speed = 0.1; 
            }
   }

  
 
  
  
 
  
  
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>24,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
