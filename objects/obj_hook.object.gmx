<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hook</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

///Initialize Variables
grav = 0.4;
//horizontal speed
hsp = 0;
//vertical speed
vsp = 0;

aHookFiredAlready = false;

hookhit = false;

timer = 80;

state = " ";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


//Trying out states..
//Grapple is initiated
if state = "shootgrapple"{
    aHookFiredAlready = true; //check if it's been fired already
    inCutscene = 1;//I thought this would stop the player from moving

    if(obj_player_grapple.hsp &gt; 2 || obj_player_grapple.hsp &lt; -2){//but I had to add this
        state = "finishgrapple";
    }
    
    
    vsp -=3;//shoot upwards
    camera_target = obj_hook;//change camera target

   if(place_meeting(x, y+vsp, obj_static)){//collision check
    while(!place_meeting(x,y+sign(vsp),obj_static)){ 
     y+= sign(vsp);
     }
        vsp=0;
        hookhit = true;
       }
        
     y+=vsp;
     
    
     //If grapple shoots up into the sky
       if(obj_hook.y &lt; room_height - room_height - 100){
            state = "finishgrapple";
        }
 }

 //This is while the grappling is happening
 if state = "grappling"{
 
    camera_target = obj_player_parent;
   
    
    distanceY = obj_player_grapple.y - obj_hook.y;
    if(distanceY &gt;= 30){
        obj_player_grapple.vsp = -2;
        obj_player_grapple.y += obj_player_grapple.vsp;
    } else {
        instance_destroy();
        }
    
    //if player moves too far left or right while grappling it disengages
    if(obj_player_grapple.hsp &gt; 2 || obj_player_grapple.hsp &lt; -2){
        state = "finishgrapple";
    }
}
        
 
 
 //returning state, back to normal
  
  if state = "finishgrapple"{
    
    camera_target = obj_player_parent;
    inCutscene = 0;
    aHookFiredAlready = false;
    state = " ";
    instance_destroy();
    
    

}
 


if(hookhit == true){
    if (timer &gt; 0) {
    timer --;
 }
 
    if(timer &lt;= 0){
    hookhit = false;
    timer = 80;
    state = "grappling";
    
    }
}

 




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_colour(c_black);
draw_line_width( x, y, obj_player_grapple.x, obj_player_grapple.y, 3);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>5,5</point>
    <point>5,5</point>
  </PhysicsShapePoints>
</object>
