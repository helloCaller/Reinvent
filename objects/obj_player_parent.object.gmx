<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_spring</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
grav = 0.4;
//horizontal speed
hsp = 0;
//vertical speed
vsp = 0;
jumpspeed =7;
movespeed = 4;

//Last ground variables for respawning
lastGroundX = x;
lastGroundY = y;

//scroll




//IMAGE FLIP
image_speed = 0.5;
facing= 1;

//TIMER
timer = 1000;

//COLLISSION CHECK
rifthit = false;

//OBJECT FADE AWAY
image_alpha= 1;

//Check if player is touching the ground
onground = false;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/////////////////
// Death Block //
/////////////////
if place_meeting(x,y,obj_death_block){
    x = lastGroundX;
    y = lastGroundY;}

/////////////////////////////
// Last Ground for Respawn //
/////////////////////////////
if onground{
    lastGroundX = x;
    lastGroundY = y;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setting up movements

/////////////////////////
// In Cutscene Changes //
/////////////////////////
if inCutscene{
    speed = 0;}
    


//If not in cut scene move left and right
if inCutscene = 0{
    key_right = keyboard_check(vk_right);
    key_left = -keyboard_check(vk_left);
    key_jump = keyboard_check_pressed(ord('Z'));
    } else{
    key_right = 0
    key_left = 0
    key_jump = 0
    }
    
    
if inCutscene = 0{
    if(keyboard_check_pressed(vk_right))facing = 1;
    if(keyboard_check_pressed(vk_left))facing = -1;
    } 
    

//Movement calculated
move = key_left + key_right;
hsp = move * movespeed;
if(vsp &lt; 10){ 
vsp += grav;
}


if(place_meeting(x,y+1, obj_static)){
vsp = key_jump * -jumpspeed;
}



//horizontal collision
if(place_meeting(x+hsp,y,obj_static)){
    while(!place_meeting(x+sign(hsp),y,obj_static)){
     x += sign(hsp);
     }
     hsp = 0;
}

//Apply verticle and horizontal speed 
x += hsp;
y += vsp;

//vertical wall collision
if(place_meeting(x, y+vsp, obj_wall)){
    while(!place_meeting(x,y+sign(vsp),obj_static)){
     y+= sign(vsp);
     }
     vsp=0;
    onground=true;
} else onground = false;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index,x,y,facing,1,0,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>24,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
