<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_coconut</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>9</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Initialize Variables
state = "in tree";
gravity = 0;
rotation = 0;
cavemanTimer = 120;


cutscenehappened = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//////////////////////
// Caveman Cutscene //
//////////////////////

/////////////
// Falling //
/////////////
if state = "falling"{
    camera_target = obj_coconut;
    gravity = 0.4;
    rotation -= 3;
    inCutscene = 1;
    if place_meeting(x,y+vspeed+gravity,obj_wall){ //Check if going to hit ground
        move_contact_solid(270,vspeed+gravity); //Move to ground
        hspeed = 1; //Start moving horizontally
        inCutscene = 1; //Start Cutscene
        if vspeed &gt; 1 then vspeed = -vspeed*0.85; //Bounce
        else{ //Done bouncing, start rolling
            vspeed = 0;
            state = "rolling";}}}
            
/////////////
// Rolling //
/////////////
if state = "rolling"{
    hspeed = 1; 
    gravity = 0;
    rotation -= 6; //Rotate
    if point_distance(x,y,obj_caveman_fish.x,y) &lt; 16{ //Touch caveman
        state = "sitting";
        obj_caveman_fish.image_speed = 0;
        obj_caveman_fish.state = "standing"
        obj_caveman_fish.emotion = -1;
        obj_caveman_fish.image_xscale = -1;}} 
        
/////////////
// Sitting //
/////////////
if state = "sitting"{
    hspeed = 0;
    //Caveman waiting
    if cavemanTimer &gt; 0{
        cavemanTimer --;
        if cavemanTimer = 80{
            //lightbulb goes here}
            obj_caveman_fish.emotion = spr_lightbulb;
            audio_play_sound(sfx_idea,1,0);
            obj_caveman_fish.emotionTimer = 0;}
            //Caveman begins walking off screen
        if cavemanTimer = 0{
            obj_caveman_fish.state = "walking";
            state = "caveman walking";}}}
            
/////////////////////////
// Caveman Walking Off //
/////////////////////////
if state = "caveman walking"{
    obj_caveman_fish.hspeed = 2;
    obj_caveman_fish.image_xscale = 1;
    if obj_caveman_fish.x &gt; view_xview + view_wview + 100{
        state = "caveman walking back";
        cavemanTimer = 100;
        obj_caveman_fish.hspeed = -2;
        obj_caveman_fish.image_xscale = -1;}}
        
//////////////////////////
// Caveman Walking Back //
//////////////////////////
if state = "caveman walking back"{
    cutscenehappened = true;//added this so the cutscene only triggers once
    
    if abs(obj_caveman_fish.x - obj_caveman_fish.startX-32) &lt; 2{
        obj_caveman_fish.hspeed = 0
        obj_caveman_fish.state = "standing";
        state = "creating wagon";}}
        
////////////////////
// Creating Wagon //
////////////////////
if state = "creating wagon"{
    if cavemanTimer &gt; 0{
        cavemanTimer --;
        if cavemanTimer = 50{
            obj_caveman_fish.image_xscale = 1;
            camera_target = obj_fish;}}
    else{
        //Smoke goes here
        if cavemanTimer = 0{
            obj_fish.state = "cart";
            obj_fish.whiteFlash = 1;}
        if cavemanTimer &gt; -100{
            cavemanTimer --;}
        else{
            if cavemanTimer = -100{
                obj_fade.fadeState = "out";
                cavemanTimer--;}
            if cavemanTimer = -101{
                if obj_fade.fadeState = "in"{
                    cavemanTimer --;
                    with obj_caveman_fish{
                        instance_destroy();}
                    with obj_fish{
                        instance_destroy();}}}
            if cavemanTimer = -102{
                camera_target = obj_player_parent;
                if obj_fade.fadeState = "" then cavemanTimer --;}
            if cavemanTimer &lt; -102 and cavemanTimer &gt; -160{
                cavemanTimer --;}
            if cavemanTimer = -160{
                    cavemanTimer --;
                    inCutscene = 0;
                    obj_player_parent.upgradeState = "wheels";
                    obj_player_parent.whiteFlash = 1;
                    audio_play_sound(sfx_upgrade,1,0);
                    var scr = "Wow, thanks Caveperson! With my wheels back, I have speed again!";
                    script_text(scr,0.3, obj_player_parent.x - 50, obj_player_parent.y - 120); 
                    
                    state = "done";}}}}
        
        
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,rotation,c_white,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.800000011920929</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>24,24</point>
    <point>24,24</point>
  </PhysicsShapePoints>
</object>
